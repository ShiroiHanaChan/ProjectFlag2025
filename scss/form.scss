@use 'scssMixins' as *;

.form-contact {
  @include display-grid($grid-columns: 1fr);
  @container (width > 75ch) {
    grid-template-columns: repeat(2, minmax(250px, 1fr));
  }
}

footer form {
  @include display-grid($grid-columns: 1fr);
  padding: var(--spacing-200);

  & input {
    /* For checkbox and input border */
    accent-color: var(--brand);
    color: inherit;
  }

  & input:not([type="checkbox"]) {
    border: 1px solid transparent;
    background-color: var(--bg-neutral-secondary);
    border-radius: var(--radius-200);
    padding: var(--spacing-150);
    margin-top: var(--spacing-075);
    width: 100%;
    &:focus {
      outline: none;
      border: 1px solid var(--brand);
    }
  }

  & input[type="checkbox"]:hover {
    cursor: pointer;
  }

  @container (width > 30ch) {
    
  }
  button {
    justify-self: end;
  }

  > div:has([type="checkbox"]) {
    @include display-flex($justify-content: space-between);
    > input {
      height: 100%;
    }
  }
}

label {
  text-box-trim: trim-both;
  text-box-edge: cap alphabetic;
}

.experienced-grid article {
  margin-block: var(--spacing-100);
  @include display-grid(
    $grid-columns: repeat(6, 1fr),
    $gap: .25em
  );
  justify-items: center;
  @container (width > 50ch) {

  }
  > .form-group {
    @include display-flex($gap: .5em);
    flex-direction: column;
    grid-column: span 2;
    @container (width > 50ch) {
      grid-column: span 1;

    }
    > p {
      margin: auto;
    }
    > svg {
      height: 4.5em;
      fill: var(--text-neutral-primary);
    }
    &:last-child:nth-child(odd) {
      background-color: lightblue;
      grid-column: -4 / -2;
    }
  }
}